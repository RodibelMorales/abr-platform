<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('Company', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('name');
            $table->string('social_reason');
            $table->string('slug');
            $table->timestamps();
            $table->softDeletes();
        });
        Schema::create('RelationType', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('name');
            $table->string('slug');
            $table->timestamps();
            $table->softDeletes();
        });
        Schema::create('UnitCompany', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('name');
            $table->string('address');
            $table->string('contact_number');
            $table->string('slug');
            $table->string('place')
            $table->bigInteger('company_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('company_id')
                ->references('id')
                ->on('Company')
                ->onCascade('cascade');
        });
        Schema::create('People', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('first_name');
            $table->string('middle_name');
            $table->string('last_name');
            $table->tinyInteger('age');
            $table->string('phone');
            $table->string('curp')->unique();
            $table->string('nss')->unique()->nullable();
            $table->string('rfc')->unique()->nullable();
            $table->string('degree');
            $table->string('email');
            $table->timestamps();
            $table->softDeletes();
        });
        Schema::create('HistoricalAddress', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('address');
            $table->tinyInteger('status');
            $table->string('residence_time');
            $table->bigInteger('people_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('people_id')
                ->references('id')
                ->on('People')
                ->onCascade('cascade');
        });
        Schema::create('Candidate', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->date('birthday');
            $table->string('born_place');
            $table->enum('gender',[ 'M','F' ]);
            $table->string('nationality');
            $table->string('civil_state');
            $table->bigInteger('address_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('address_id')
                ->references('id')
                ->on('HistoricalAddress')
                ->onCascade('cascade');
        });
        Schema::create('Survey', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('sheet');
            $table->enum('status',["Aprobado","Aprobado con reserva","No Aprobado"]);
            $table->longText('comments');
            $table->bigInteger('job_title_id')->unsigned()->nullable();
            $table->bigInteger('created_by')->unsigned()->nullable();
            $table->bigInteger('aproveded_by')->unsigned()->nullable();
            $table->bigInteger('updated_by')->unsigned()->nullable();
            $table->bigInteger('deleted_by')->unsigned()->nullable();
            $table->bigInteger('completed_by')->unsigned()->nullable();
            $table->bigInteger('recluted_by')->unsigned()->nullable();
            $table->bigInteger('candidate_id')->unsigned()->nullable();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('job_title_id')
                ->references('id')
                ->on('JobTitle')
                ->onCascade('cascade');
            $table->foreign('created_by')
                ->references('id')
                ->on('users')
                ->onCascade('cascade');
            $table->foreign('aproveded_by')
                ->references('id')
                ->on('users')
                ->onCascade('cascade');
            $table->foreign('updated_by')
                ->references('id')
                ->on('users')
                ->onCascade('cascade');
            $table->foreign('deleted_by')
                ->references('id')
                ->on('users')
                ->onCascade('cascade');
            $table->foreign('completed_by')
                ->references('id')
                ->on('users')
                ->onCascade('cascade');
            $table->foreign('recluted_by')
                ->references('id')
                ->on('users')
                ->onCascade('cascade');
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
        });
        Schema::create('FinalcialDepent', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->tinyInteger('quantity');
            $table->bigInteger('relation_type_id')->unsigned();
            $table->bigInteger('candidate_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('relation_type_id')
                ->references('id')
                ->on('RelationType')
                ->onCascade('cascade');
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidates')
                ->onCascade('cascade');
        });
        Schema::create('FamiliarInfo', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->bigInteger('people_id')->unsigned();
            $table->bigInteger('company_id')->unsigned();
            $table->bigInteger('relation_type_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('people_id')
                ->references('id')
                ->on('People')
                ->onCascade('cascade');
            $table->foreign('company_id')
                ->references('id')
                ->on('Company')
                ->onCascade('cascade');
            $table->foreign('relation_type_id')
                ->references('id')
                ->on('RelationType')
                ->onCascade('cascade');
        });
        Schema::create('Imss', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('razon');
            $table->date('start_date');
            $table->date('end_date');
            $table->tinyInteger('status');
            $table->longText('comment');
            $table->bigInteger('candidate_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
        });
        Schema::create('Picture', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('name');
            $table->bigInteger('candidate_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
        });
        Schema::create('CreditInformation', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('credit_type');
            $table->string('institution');
            $table->string('situation');
            $table->bigInteger('candidate_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
        });
        Schema::create('Vehicle', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('type');
            $table->string('mark');
            $table->string('model');
            $table->bigInteger('price');
            $table->string('status');
            $table->bigInteger('candidate_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
        });
        Schema::create('IncomeFamily', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->bigInteger('income');
            $table->bigInteger('contribution');
            $table->bigInteger('belongs_to_candidate')->unsigned();
            $table->bigInteger('people_id')->unsigned();
            $table->bigInteger('relation_type_id')->unsigned();
            $table->bigInteger('job_title_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('belongs_to_candidate')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
            $table->foreign('people_id')
                ->references('id')
                ->on('People')
                ->onCascade('cascade');
            $table->foreign('relation_type_id')
                ->references('id')
                ->on('RelationType')
                ->onCascade('cascade');
            $table->foreign('job_title_id')
                ->references('id')
                ->on('JobTitle')
                ->onCascade('cascade');
        });
        Schema::create('Question', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('name');
            $table->enum('type',['list','text','number','boolean']);
            $table->string('category');
            $table->timestamps();
            $table->softDeletes();
        });
        Schema::create('FamilyExpenses', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->bigInteger('candidate_id')->unsigned();
            $table->bigInteger('question_id')->unsigned();
            $table->string('value');
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
            $table->foreign('question_id')
                ->references('id')
                ->on('Question')
                ->onCascade('cascade');
        });
        Schema::create('MedicalInfo', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->bigInteger('candidate_id')->unsigned();
            $table->bigInteger('question_id')->unsigned();
            $table->string('value');
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
            $table->foreign('question_id')
                ->references('id')
                ->on('Question')
                ->onCascade('cascade');
        });
        Schema::create('AcademicSkills', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('name');
            $table->string('institution');
            $table->string('doc');
            $table->string('sheet');
            $table->bigInteger('candidate_id')->unsigned();
            $table->bigInteger('question_id')->unsigned();
            $table->string('value');
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
            $table->foreign('question_id')
                ->references('id')
                ->on('Question')
                ->onCascade('cascade');
        });
        Schema::create('OtherReference', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->string('type');
            $table->longText('comments');
            $table->bigInteger('candidate_id')->unsigned();
            $table->bigInteger('people_id')->unsigned();
            $table->bigInteger('relation_type_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('people_id')
                ->references('id')
                ->on('People')
                ->onCascade('cascade');
            $table->foreign('relation_type_id')
                ->references('id')
                ->on('RelationType')
                ->onCascade('cascade');
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
        });
        Schema::create('LaboralReference', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->bigInteger('montly_income');
            $table->date('start_date');
            $table->date('end_date');
            $table->longText('leaving_reason');
            $table->longText('comments');
            $table->bigInteger('job_title_id')->unsigned();
            $table->bigInteger('company_id')->unsigned();
            $table->bigInteger('candidate_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('job_title_id')
                ->references('id')
                ->on('JobTitle')
                ->onCascade('cascade');
            $table->foreign('company_id')
                ->references('id')
                ->on('Company')
                ->onCascade('cascade');
            $table->foreign('candidate_id')
                ->references('id')
                ->on('Candidate')
                ->onCascade('cascade');
        });
        Schema::create('DirectBoss', function (Blueprint $table) {
            $table->bigIncrements('id')->index();
            $table->bigInteger('people_id')->unsigned();
            $table->bigInteger('job_title_id')->unsigned();
            $table->bigInteger('laboral_reference_id')->unsigned();
            $table->timestamps();
            $table->softDeletes();
            $table->foreign('people_id')
                ->references('id')
                ->on('People')
                ->onCascade('cascade');
            $table->foreign('job_title_id')
                ->references('id')
                ->on('JobTitle')
                ->onCascade('cascade');
            $table->foreign('laboral_reference_id')
                ->references('id')
                ->on('LaboralReference')
                ->onCascade('cascade');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('Company');
    }
};
